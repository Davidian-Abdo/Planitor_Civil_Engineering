version: '3.8'

services:
  # Main Streamlit application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=postgresql://app_user:app_password@db:5432/construction_db
      - SECRET_KEY=change-me-in-production
      - DEBUG=False
      - SESSION_TIMEOUT=120
      - LOG_DIR=/app/logs
      - OUTPUT_DIR=/app/outputs
      - TEMPLATE_DIR=/app/templates
      - BACKUP_DIR=/app/backups
    volumes:
      - ./logs:/app/logs
      - ./outputs:/app/outputs
      - ./backups:/app/backups
      - ./templates:/app/templates
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=construction_db
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=app_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d construction_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx for production (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: construction_network